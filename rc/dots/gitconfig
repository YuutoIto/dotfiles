[user]
	email = uplus.e10@gmail.com
	name  = uplus
[credential]
	username = uplus
[core]
	excludesfile = ~/.gitignore
	pager = less -i --RAW-CONTROL-CHARS --quit-if-one-screen --no-init
	quotepath = false
	encodig = utf-8
[color]
	ui = true
[web]
	browser = xdg-open
[push]
	default = current
[diff]
	tool      = vimdiff
	# algorithm = histogram
	algorithm = minimal
	# algorithm = patience
	renames = true
	indentHeuristic = true
	compactionHeuristic = false
[fetch]
	parallel = 0
# [blame]
	# ignoreRevsFile = .git-blame-ignore-revs
[pull]
	# rebase = true
	ff = only
[merge]
	ff = false
	tool = vimdiff
[rebase]
	autostash = true
[url "https://github.com/"]
	insteadof = g:
[url "git@github.com:uplus/"]
	insteadof = ggu:
[url "https://github.com/uplus/"]
	insteadof = ghu:
[url "https://bitbucket.org/"]
	insteadof = b:
[url "git@bitbucket.org:u10e10/"]
	insteadof = bgu:
[http "https://gopkg.in"]
	followRedirects = true
[alias]
	a   = add
	s   = status --short --branch
	d   = diff
	dc  = diff --cached
	dcw = diff --cached --color-words
	dw  = diff --color-words
	ds  = diff --stat
	do  = !"git diff $(git remote-branch)"
	l       = !git graph -20
	lh      = !git graph origin/master..@
	la      = !git graph
	lo      = log --graph --decorate --stat --find-renames
	logline = log --graph --decorate --date=short --pretty='%C(yellow)%h %Cgreen[%cd]%Creset%C(cyan bold)%d%Creset %s'
	today   = log --graph --decorate --oneline --stat --since='16 hour ago'
	graph   = log --graph --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'
	loggr   = log --graph --date-order --pretty=format:'%Cblue%h %Cgreen%ci %Cred%an %Cblue%m %Creset%s %Cred%d'
	deletes = log --diff-filter=D --summary --oneline
	sw   = switch
	ch   = checkout
	new  = checkout -b
	co   = commit
	coa  = commit -a
	cov  = commit -v
	com  = commit -m
	cav  = commit -av
	cam  = commit -am
	coav = commit -av
	coam = commit -am
	fix  = commit --amend -v
	fixa = commit --amend -va
	fixm = commit --amend -C HEAD
	fixam = commit --amend -a -C HEAD
	f     = flow
	ff    = flow feature
	ffs   = flow feature start
	ffc   = flow feature checkout
	frs   = flow release start
	fhs   = flow hotfix start
	wt    = worktree
	empty = commit --allow-empty -m
	b     = branch
	eda   = branch -avv
	del   = branch -d
	ss    = stash save --include-untracked --keep-index
	save  = stash save --include-untracked
	spop  = stash pop
	sdrop = stash drop
	slist = stash list --stat --oneline
	all    = add --all
	update = add --update
	patch  = add --patch
	ours   = checkout --ours
	theirs = checkout --theirs
	ch-original = checkout --theirs # 元の方を採用する
	ch-current = checkout --ours
	ls = ls-files --exclude-standard -c -o
	tags = tag -l -n --sort=v:refname
	untrack = update-index --skip-worktree
	push-force = push --force-with-lease
	remote-branch = !"f(){ git status --branch | grep '^Your' | grep -Po \"'[^']*'\" | tr -d \"'\"; }; f"
	rprune = !"f(){ git remote prune ${1:-origin}; }; f"
	rei    = !"f(){ git rebase -i ${1:-$(git parent-branch)}; }; f"
	# rei    = rebase -i
	# reoh   = !"f(){ git rebase -i $(git remote-branch); }; f"
	continue = rebase --continue
	abort    = rebase --abort
	skip     = rebase --skip
	smerge = !"f(){ git merge --ff-only ${1}; git branch -d ${1}; }; f"
	fmerge = merge --ff-only
	aliases = !git config --get-regexp '^alias\\.' | sed 's/^alias\\.//g'
	merged  = !git branch --merged | grep -v master | grep -v '*'
	edit    = config --edit --local
	editg   = config --edit --global
	back   = !"f(){ git reset HEAD~${1}; }; f"
	current-branch = rev-parse --abbrev-ref HEAD
	# fetch-pulls = fetch origin +refs/pull/*:refs/remotes/pull/*
	souji = clean -fd
	get = clone --depth 1
	inish = !"f(){ git init && [ $# -ne 0 ] && git add $1; git s && git sh; }; f"
	inic = !"git init && git add --all && git s && git com 'First commit.'"
	ctodo = !"git commit -n -m \"[ci skip] [tmp] [$(date +%F:%R)]\""
	tmpc = !"git add --all && git ctodo"
	# open = !"xdg-open $(git remote show origin -n | grep -m1 -oP '(?<=URL: ).*')"
	pull-dry-run  = !"git fetch origin; B=$(git rev-parse --abbrev-ref HEAD); git diff --stat --summary ${B}..origin/${B}"
	pull-rebase = !"f(){ git switch ${1} && git pull && git switch - && git rebase ${1} ; }; f"
	rename-to-new-alias = !"sed -i -e 's|https://github\\.com/u10e10/|ghu:|' -e 's|git@github\\.com:u10e10/|ggu:|' .git/config"
	pick = cherry-pick
	wta = !"f(){ git worktree add \".git-wt-$(echo ${1} | tr '/' '-')\" \"${1}\"; }; f"
	grepf = grep --function-context
	# log-branch = !"git log --oneline --pretty=format:%D | grep -v '^tag:' | sed \"s|^$(git remote show)/[^ ]*\\s*||g\" | grep -v '^$'"
	# parent-branch = !"git log-branch | sed 's|HEAD -> [^ ]\\+\\s*||g' | grep -v '^$' | peco --select-1"
	# awkで順序を維持したまま重複排除
	log-branch = !"git show-branch | grep '*' | grep -v \"$(git rev-parse --abbrev-ref HEAD)\" | awk -F'[]~^[]' '{print $2}' | awk 'a[$0]++ == 0'"
	parent-branch = !"git log-branch | peco --on-cancel=error --select-1"
	merge-to = merge-to
	remote-change = remote-change
	capdate = !"git add . ; git com update"
	copdate = !"git com update"
	rp = reflog --date=human --all
	browse = !gh browse
	open = browse
	pr-create = !gh pr create --web
	pr-create-push = !"git push -u && git pr-create"
	pr-open = !gh pr view --web
