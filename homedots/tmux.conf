# web manual
# http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/tmux.1?query=tmux&sec=1

# custom stauts line
# http://qiita.com/nojima/items/9bc576c922da3604a72b

# bind
#   -t モード
#   -n プレフィックス必要なし
#
# tmux list-keys  キー一覧

# 便利: w ? :


# Keybinds # {{{

## Prefix to C-t frorm C-b.
unbind C-b
set -g prefix C-space

## No prefix bind

set -g xterm-keys on
bind -T root M-t new-window -c '#{pane_current_path}'
# alacrittyが非サポート
# bind -T root C-Tab next-window
# bind -T root C-S-Tab previous-window


#bind w choose-window -F '#I:#W "#T"' # default

## Reload the config file
bind C-r source-file ~/.tmux.conf

## Create new pane.
bind C-v split-window -h -c '#{pane_current_path}'
bind C-s split-window -v -c '#{pane_current_path}'

## Move pane.
bind t select-pane -t :.+
bind -r C-t select-pane -t :.+
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

## Resize pane like vim.
bind -r < resize-pane -L 5
bind -r > resize-pane -R 5
bind -r + resize-pane -D 5
bind -r - resize-pane -U 5

## Window
#<prefix>NUM   move to NUM window
bind C-t new-window
bind -r C-n next-window
bind -r C-p previous-window

## Use vim keybind. # {{{
setw -g mode-keys vi
bind [ copy-mode
bind C-[ copy-mode
bind ] copy-mode
bind C-] copy-mode
bind -n S-Pageup copy-mode
bind -n S-Pagedown copy-mode

bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi Enter send-keys -X cancel
bind -T copy-mode-vi Escape send-keys -X cancel

bind -T copy-mode-vi v send-keys -X select-line
bind -T copy-mode-vi V send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-Toggle

bind -T copy-mode-vi w send-keys -X next-word
bind -T copy-mode-vi e send-keys -X next-word-end
bind -T copy-mode-vi b send-keys -X previous-word

bind -T copy-mode-vi g send-keys -X top-line
bind -T copy-mode-vi G send-keys -X bottom-line
bind -T copy-mode-vi / send-keys -X search-forward
bind -T copy-mode-vi ? send-keys -X search-backward
# }}}
# }}}

# # Enable RGB colour if running in xterm(1)
# set -sa terminal-overrides ",xterm*:Tc"
set -g default-terminal 'xterm-256color'
set -sg escape-time 1         # low delay

# マウス操作を有効にする
# disabled for from ssh terminal
# if-shell "tmux -V | awk '{exit !($2 >= 2.1)}'" 'set -g mouse on;'

setw -g clock-mode-style 24
setw -g automatic-rename off
set -g focus-events on

# リフレッシュの間隔を設定する(デフォルト 15秒)
# set -g status-interval 5
# ウィンドウリストの位置を中心寄せにする
# set -g status-justify centre

# window and pane index start from 1
set -g base-index 1
setw -g pane-base-index 1

# Statusline # {{{
set -g status-position top
# set -g status-fg white
set -g status-bg colour236
# set -g status-left-length
# set -g status-right-length
# set -g status-left-style fg=colour209 # no compatibility to old tmux.
# set -g status-right-style bg=white
set -g status-left '#[fg=colour209][#S] '
# set -g status-right "#[fg=colour252 bg=colour57]'#T' %R %d-%b(%a)"
set -g status-right "#[fg=colour232 bg=colour208]'#T' %R %d-%b(%a)"
# }}}

# Window # {{{
setw -g window-status-format '#I:#W '
setw -g window-status-current-format '#I:#W '
setw -g window-status-style fg="white"
# setw -g window-status-bg colour236
# setw -g window-status-attr dim
setw -g window-status-current-style fg="colour197"
# setw -g window-status-current-bg colour236
# setw -g window-status-current-attr bright
# }}}

# ペインボーダーの色を設定する # {{{
set -g pane-border-style fg="white",bg="default"
set -g pane-active-border-style fg="colour208",bg="default"
# }}}

# コマンドラインの色を設定する # {{{
set -g message-style fg="white",bg="black"
# set -g message-attr bright
# }}}



# -----------------------
#
# #
# # Example .tmux.conf
# #
# # By Nicholas Marriott. Public domain.
# #
#
# # Some tweaks to the status line
# set -g status-right "%H:%M"
# set -g window-status-current-style "underscore"
#
# # If running inside tmux ($TMUX is set), then change the status line to red
# %if #{TMUX}
# set -g status-bg red
# %endif
#
#
#
# # No bells at all
# set -g bell-action none
#
# # Keep windows around after they exit
# set -g remain-on-exit on
#
# # Change the prefix key to C-a
# set -g prefix C-a
# unbind C-b
# bind C-a send-prefix
#
# # Turn the mouse on, but without copy mode dragging
# set -g mouse on
# unbind -T root  MouseDrag1Pane
# unbind -T root  MouseDown1Pane
# unbind -T root  MouseDown1Status
# unbind -T root  MouseDown3Pane
# unbind -T root  MouseDrag1Pane
# unbind -T root  MouseDrag1Border
# unbind -T root  WheelUpPane
# bind-key    -T copy-mode    MouseDown1Pane    select-pane
# bind-key    -T copy-mode    MouseDrag1Pane    select-pane ; send-keys -X begin-selection
# bind-key    -T copy-mode    MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
# bind-key    -T copy-mode-vi MouseDown1Pane    select-pane
# bind-key    -T copy-mode-vi MouseDrag1Pane    select-pane ; send-keys -X begin-selection
# bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
# bind-key    -T root         MouseDown1Pane    select-pane -t = ; send-keys -M
# bind-key    -T root         MouseDown1Status  select-window -t =
# bind-key    -T root         MouseDown3Pane    if-shell -F -t = "#{mouse_any_flag}" "select-pane -t=; send-keys -M" "select-pane -mt="
# bind-key    -T root         MouseDrag1Pane    if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"
# bind-key    -T root         MouseDrag1Border  resize-pane -M
# bind-key    -T root         WheelUpPane       if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"copy-mode -et=\""

#
# # Some extra key bindings to select higher numbered windows
# bind F1 selectw -t:10
# bind F2 selectw -t:11
# bind F3 selectw -t:12
# bind F4 selectw -t:13
# bind F5 selectw -t:14
# bind F6 selectw -t:15
# bind F7 selectw -t:16
# bind F8 selectw -t:17
# bind F9 selectw -t:18
# bind F10 selectw -t:19
# bind F11 selectw -t:20
# bind F12 selectw -t:21
#
# # A key to toggle between smallest and largest sizes if a window is visible in
# # multiple places
# bind F set -w window-size
#
# # Keys to toggle monitoring activity in a window and the synchronize-panes option
# bind m set monitor-activity
# bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'
#
# # Create a single default session - because a session is created here, tmux
# # should be started with "tmux attach" rather than "tmux new"
# new -d -s0 -nirssi 'exec irssi'
# set -t0:0 monitor-activity on
# set  -t0:0 aggressive-resize on
# neww -d -ntodo 'exec emacs ~/TODO'
# setw -t0:1 aggressive-resize on
# neww -d -nmutt 'exec mutt'
# setw -t0:2 aggressive-resize on
# neww -d
# neww -d
# neww -d
