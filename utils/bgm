#!/usr/bin/env ruby
# frozen_string_literal: true

require 'find'
require 'optparse'
require 'shellwords'
require 'open3'

def regexps_from_file(path)
  return [] unless File.file?(path)

  File.readlines(path).map {|p| Regexp.new(p.strip, Regexp::IGNORECASE) }
end

def parse_options
  ARGV.getopts('', 'num:40', 'dir:~/Music', 'play:vlc')
    .transform_keys(&:to_sym)
    .tap do |opts|
      opts[:num] = opts[:num].to_i
      opts[:dir] = (Dir.pwd.include?('/Music/') ? Dir.pwd : File.expand_path(opts[:dir])) + '/'
    end
end

def ignore?(file)
  IGNORE_PATTERNS.any? {|regexp| regexp =~ file }
end

def get_musics(dir)
  Find
    .find(dir)
    .select {|filename| filename.end_with?('mp3', 'wav', 'ogg', 'opus', 'flac') && !ignore?(filename) }
end

def select_musics(files, num)
  files.sample(num)
end

def escape(files)
  files.map(&:shellescape)
end

IGNORE_FILE = File.join(Dir.home, '.bgm_ignore').freeze
IGNORE_PATTERNS = regexps_from_file(IGNORE_FILE)

#   -n {NUM}  Number
#   -d {DIR}  Directory default is ~/Music/
#   -p {play} Player   default is vlc

option         = parse_options
all_files      = get_musics(option[:dir])
selected_files = select_musics(all_files, option[:num])
escaped_files  = selected_files.map(&:shellescape)
player_options = (option[:play] == 'vlc') ? ['--daemon'] : []
puts selected_files.sort

begin
  # Open3.capture3("%s %s >/dev/null >/dev/null 2>/tmp/bgm.log &" % [option[:play], escaped_files.join(' ')])
  Open3.capture3(option[:play], *player_options, *selected_files)
rescue StandardError => e
  puts e, e.backtrace
  puts "\n#arg files"
  selected_files.zip(escaped_files) {|str, esc| p str, esc }
end
