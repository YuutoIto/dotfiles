#!/usr/bin/env zsh
# login interactiveで実行される

# recover PATH
if [[ ${PATH} != ${PATH_keep:=} ]]; then
  export PATH="${PATH_keep}:${PATH}"
fi

LC_COLLATE=C # Don't move to zshenv.
DIRSTACKSIZE=100
fpath+=($ZSH_DOT_DIR/f)
disable r # zsh-builtin: 直前のコマンドを実効する
autoload -Uz zmv

# 仮想端末でコマンドを実行(パスワードの自動入力とか ダメ絶対)
# zmodload zsh/zpty

# Colors {{{

eval "$(dircolors -b)"
# change ln color
# LS_COLORS=$(echo "$LS_COLORS" | sed 's/ln=[^:]\+/ln=38;5;81/g')
# bolt to regular
LS_COLORS=$(echo $LS_COLORS | sed 's/=01;/=00;/g')
autoload -U colors && colors

# fallback
[[ "$COLORTERM" == (24bit|truecolor) || "${terminfo[colors]}" -eq '16777216' ]] || zmodload zsh/nearcolor

# }}}

# Prompt {{{

autoload -Uz promptinit && promptinit
setopt prompt_subst         # プロンプト定義で置き換えを使用する
setopt prompt_cr            # show prompt in new line, when after command finish.
setopt no_transient_rprompt # on: remove old rprompt when after execute a command.

export PROMPT='$(prompt-return-value)$(prompt-ssh)$(prompt-git)$(prompt-bg-cmds)
%F{0}%K{$(prompt-color)}$(prompt-dir) %F{$(prompt-symb-color)}%# %f%k%F{$(prompt-color)}%f%k '
# 
export PROMPT_COLOR_SSH='#FFF38F'
export PROMPT_COLOR_ERROR='#FF6A84'

autoload -Uz prompt-git # aliasなどの影響を受けない

prompt-return-value(){
  echo -n "%(?,,%F{${PROMPT_COLOR_ERROR}}%?%f )"
}

prompt-ssh() {
  in_ssh && echo "%F{$PROMPT_COLOR_SSH}($HOST)%f"
}

# vimなど特定のbgコマンドを表示する
prompt-bg-cmds() {
  # bg_cmds=$(ps -o comm | tail --lines=+2 | grep -E 'vim')
  bg_cmds=$(jobs | head -1 | awk '$0=$5')

  if [[ -n ${bg_cmds} ]]; then
    out=$(echo "${bg_cmds}" | head -1)
    echo -n "[%F{141}${out}%f] "
  fi
}

prompt-dir(){
  echo -n '%(6~|...|)%5~'
}

prompt-color(){
  if (($UID == 0)); then
    echo -n '%(?.253.244)'
  elif in_ssh; then
    echo -n "%(?.${PROMPT_COLOR_SSH}.${PROMPT_COLOR_ERROR})"
  else
    echo -n "%(?.#6EA4FF.${PROMPT_COLOR_ERROR})"
  fi
}

prompt-symb-color(){
  if (($UID == 0)); then
    echo 160
  else
    # echo 255
    echo 0
  fi
}
# }}}

# Show options `set -o`

# History # {{{
setopt share_history
setopt inc_append_history       # 履歴を即座に書き込む
setopt extended_history         # 履歴に時を刻む
setopt hist_no_store            # not add history-command to history.
setopt hist_no_functions        # remove functon definitions from the history list.
setopt hist_reduce_blanks       # reduce unnecessary blanks
setopt hist_ignore_space        # not add to the history if first character of the command is space.
setopt hist_ignore_dups
setopt hist_ignore_all_dups     # 過去の履歴と重複しても削除しない
setopt no_hist_verify           # history-commandを直接実行せず、まず展開する
SAVEHIST=300000 # file
HISTSIZE=20000  # memory
HISTFILE=~/.zsh/history

# 失敗したコマンドはファイルに書き込まない
# whenceの引数をクオートすると動かなくなる
zshaddhistory() { whence -- ${${(z)1}[1]} >| /dev/null || return 1 }
# }}}

# Options {{{
setopt local_options          #on: 関数終了時に全てのオプションを復元する
setopt no_beep no_list_beep no_hist_beep
setopt autocd
setopt auto_pushd
setopt pushd_to_home          #pushdを引数無しで実行した時ホームに移動する
setopt pushd_silent
setopt interactive_comments   # can use comment
setopt noequals               # Enable "=command" feature
setopt no_flow_control    # C-s, C-qを無効にする。
setopt clobber            # リダイレクトで上書きする事を許可
setopt rm_star_silent     # rm *の警告を無効にする
setopt ZLE                #use zsh line editor
if [[ "${IGNOREEOF:-}" -ne 0 ]]; then
  setopt ignoreeof
fi
# setopt cdablevars             #on: if arguments of cd is not directory, expand as variable.

#jobs
setopt auto_resume            # background jobをそのコマンド名で再開する(リダイレクト時不可)
setopt notify                 # background jobが終了したらプロンプトの表示を待たずに知らせる
setopt check_jobs             # report the background  and suspendedjobs before exit.
setopt long_list_jobs         # jobs -l
# setopt nohup                 # exit時にbgプロセスを殺さない

#glob
setopt extended_glob
setopt brace_ccl          # {a-c}をa b cに展開する
setopt no_dot_glob
setopt mark_dirs              # Add "/" when glob.
# setopt nonomatch          #off: マッチしなかったときエラーにせずただの文字列として扱う
# setopt numeric_glob_sort  #数値が含まれたとき数字順にソートする

#complete
setopt always_lastprompt  #補完で行を移動しない
setopt list_types         # List like "ls -F"
setopt list_packed        # 補完リストをなるべく少ない量にする
setopt auto_param_keys    #自動補完される余分なカンマなどを適宜削除してスムーズに入力できるようにする
setopt auto_param_slash   #ディレクトリ名の補完で末尾の/を自動的に付加し、次の補完に備える
setopt auto_remove_slash  #スラッシュが補完された後、;やスペースを入力したら自動的にそのスラッシュを消す
setopt magic_equal_subst  # --prefix=/usr/など = 以降も補完

setopt list_rows_first    # 候補を移動するとき横に進む
setopt no_list_ambiguous  #on: 共通部分を補完してリストは表示しない

# is_parentは遅い
# if is_parent yakuake || is_parent nvim ; then
#   setopt ignore_eof # 行が空の時にCtrl-Dで終了
# fi

# auto_list auto_menu bash_auto_list glob_complete hash_list_all list_ambiguous menu_complete rec_exact
# setopt auto_menu          # TABで候補を選択できるメニュー(2type必要)
# setopt auto_list          # 補完候補一覧をPAGER的なもので表示する
# setopt no_menu_complete   #

# }}}

# zgen # {{{
zgen_path="$HOME/.zgen"

if [[ ! -e ${zgen_path:-} ]]; then
  local key
  if read -q key'?install zgen?(y/N) '; then
    echo
    git clone https://github.com/tarjoilija/zgen.git "${zgen_path}"
  fi
  unset key
fi

if [[ -d ${zgen_path:-} ]]; then
  source "${zgen_path}/zgen.zsh"
  if ! zgen saved; then
    # zgen load junegunn/fzf      # command
    # zgen load Russell91/sshrc   # command
    # zgen load philovivero/distribution # command

    # zgen load mollifier/zload # reload zsh completion function.
    # zgen load b4b4r07/auto-fu.zsh
    # zgen load zsh-users/zsh-syntax-highlighting
    zgen load zsh-users/zsh-completions src
    zgen save
  fi
fi

unset zgen_path
# }}}

# Completion {{{
# NOTE: call by zgen one time.
# autoload -U compinit

# -u disable security check.
# compinit -u

# require after compinit
source "$ZSH_DOT_DIR/zsh.completion"

# }}}

# title
title-cmd(){ title "${1}" }
title-dir(){ title "${PWD}" }
add-zsh-hook preexec title-cmd
add-zsh-hook chpwd title-dir

# cdr # {{{
# if is-at-least 4.3.11; then
autoload -Uz chpwd_recent_dirs cdr
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':chpwd:*' recent-dirs-max 1000
zstyle ':chpwd:*' recent-dirs-default true
zstyle ':chpwd:*' recent-dirs-pushd true
zstyle ':chpwd:*' recent-dirs-file "${CHPWD_DIR}"
zstyle ':completion:*:*:cdr:*' menu select
# }}}

source "$ZSH_DOT_DIR/zsh.functions"
source "$ZSH_DOT_DIR/zsh.aliases"

# zstyle completion {{{
# zstyle ':completion:*:*:CMD:*:TAG' STYLE
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose true
zstyle ':completion:*:options' verbose true
zstyle ':completion:*:values' verbose true
zstyle ':completion:*' menu select=1 # 現在の補完候補をハイライト
zstyle ':completion:*' list-separator '~~>'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-prompt '%S%F{197}   Hey Hey! %p   %f%s'
zstyle ':completion:*' select-prompt '%S%F{208}  ε=ε=ε=ε=＼(;´□ `)/ %p  %f%s'
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'

zstyle ':completion:*:descriptions' format '%F{43}%d%f'
zstyle ':completion:*:messages'     format '%F{227}%d%f'
zstyle ':completion:*:warnings'     format '%F{red}Sorry, no matches for%f: %d'

#kill 番号色付き nolist interactive
zstyle ':completion:*:*:kill:*' list-colors '=(#b) #([0-9]#)*=0=38;05;162'
zstyle ':completion:*:*:kill:*' menu true interactive
zstyle ':completion:*:*:kill:*' command 'ps --no-headers -u "${USER}" -o pid,%cpu,tty,cputime,cmd'

zstyle ':completion:*:*:sudo:*' command-path /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin
zstyle ':completion:*:*:-subscript-:*' tag-order indexes parameters   # complete array index.

# setopt noautolist
setopt no_menu_complete
setopt autolist
setopt automenu
# }}}

source "$ZSH_DOT_DIR/zsh.keymaps"

# auto-fu {{{
# キーマップの干渉がひどい
zstyle ':auto-fu:highlight' input bold
zstyle ':auto-fu:highlight' completion fg=black,bold
zstyle ':auto-fu:highlight' completion/one fg=white,bold,underline
zstyle ':auto-fu:var' postdisplay $'\n-auto-'
zstyle ':auto-fu:var' track-keymap-skip opp
# zle-line-init () { auto-fu-init };
# zle -N zle-line-init
# zle -N zle-keymap-select auto-fu-zle-keymap-select
# }}}

#Load local config
exists_source "$ZSH_DOT_DIR/zshrc.local"

can_exec zprof && (zprof | tee ~/zsh.log) || :
