#!/usr/bin/env zsh
# zmodload zsh/zprof && zprof

## For ssh and tty
[[ ! -z "${ZSHENV_LOADED:-}" ]] && return
ZSHENV_LOADED="loaded"

## add unique attr
typeset -U path PATH MANPATH INFOPATH fpath FPATH MANPATH NODE_PATH # RUBYLIB

in_path(){ which $@ &>! /dev/null }
can_exec(){ type $@ &>! /dev/null }
in_ssh(){ [[ -n "${REMOTEHOST:-}${SSH_CONNECTION:-}" ]] }
in_tmux(){ [[ -n "${TMUX:-}" ]] }
in_interactive() { [[ $- == *i* ]] }
in_darwin() { [[ $OSTYPE =~ 'darwin' ]] }
in_alacritty() { [[ -n "${ALACRITTY_LOG:-}" ]] }
is_parent() { ps --no-header "${PPID}" | grep -q "${1:? parent process name}" }

export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_CACHE_HOME="${HOME}/.cache"
export PATH="${HOME}/.local/bin:/usr/local/bin:${PATH}"

## tmux
if ! in_tmux && in_interactive && (in_ssh || in_alacritty) && [[ ! -f ~/.notmux ]] && in_path tmux; then
  exec tmux
fi
rm ~/.notmux >&! /dev/null


## Directories
export ZSH_DOT_DIR="$(dirname "$(readlink $HOME/.zshenv)")"
export DOT_DIR="$(dirname "${ZSH_DOT_DIR}")"
export MOUNT='/run/media/uplus'

case "${OSTYPE:-}" in
  linux*)  source "$ZSH_DOT_DIR/zshrc.linux" ;;
  darwin*) source "$ZSH_DOT_DIR/zshrc.darwin" ;;
esac

export skip_global_compinit=1

# export LANGUAGE=en # don't need?
export LANG=en_US.UTF-8 # Provides default value for LC_* variables.

export WORDCHARS='*?!#%[]{}<>()~`\' # ^$&@_+-:;|.

## Editer config
if in_path nvim; then
  export EDITOR=nvim
else
  export EDITOR=vim
fi
export GIT_EDITOR="${EDITOR}"
export VISUAL="${EDITOR}"

## Pager config
export PAGER='less --ignore-case --RAW-CONTROL-CHARS --LONG-PROMPT'
export MANPAGER="${PAGER} --chop-long-lines"
export GIT_PAGER="${PAGER}" # --chop-long-lines --quit-if-one-screen --no-init

export WWW_BROWSER=w3m
export DOWNLOADER='wget -S'
in_tmux || export TERM='xterm-256color'
# export DOCKER_CONTENT_TRUST=1
export COMPOSE_HTTP_TIMEOUT=1200
export MOCWORD_DATA="${XDG_CACHE_HOME}/mocword.sqlite"
export NMAP_PRIVILEGED="" # set privilege mode to nmap
export RUSTFLAGS='-A dead_code -A unused_imports -A  unused_variables -A unused_macros'
export CHPWD_DIR="${HOME}/.zsh/dirs"
# export LC_ALL=en_US.UTF-8 # LC_COLLATE is not working, evil /etc/profile
# export LC_COLLATE=C

## Neovim
export NVIM_PYTHON_LOG_FILE="$HOME/.vim/tmp/log"
export NVIM_PYTHON_LOG_LEVEL=INFO

if [[ -d $HOME/.rbenv/bin ]]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  in_path rbenv && eval "$(rbenv init - zsh)"
elif in_path gem; then
  # ベンチに引っかからないのに重い, 無くてもいい環境が多そう
  # export PATH="${$(gem environment gempath)%%:*}/bin:$PATH"
fi

## Languages
export GOPATH="$HOME/.go"
export NPM_PACKAGES="$HOME/.npm-packages"
export NODE_PATH="${NPM_PACKAGES}/lib/node_modules:${NODE_PATH}"

export PATH="$GOPATH/bin:${PATH}"
## rusutpを使ってると無いほうが良い?
export PATH="${HOME}/.cargo/bin:${PATH}"
export PATH="${HOME}/.cabal/bin:${PATH}"
export PATH="${NPM_PACKAGES}/bin:${PATH}"
export PATH="${DOT_DIR}/utils:${PATH}:${DOT_DIR}/git-subcommands"

## enable high speed compile with compile cache
export PATH="/usr/lib/ccache/bin:${PATH}"
# export CCACHE_DISABLE=1

if [[ -z $USER ]]; then
  export USER="$(whoami)"
fi

# if [[ -n "${WINDOWID:-}" && -f $HOME/.xmodmap ]]; then
#   xmodmap ~/.xmodmap
# fi

# ctrl-sによる停止を無効化
in_interactive && stty -ixon -ixoff >&! /dev/null

export PATH="${HOME}/bin:${PATH}"

# /etc/zsh/profile -> /etc/profileで爆発しないようプロテクト
# readonly PATH

# 何故か一度設定してからじゃないとexaが読み取ってくれない
LINES="${LINES}"
COLUMNS="${COLUMNS}"

# for recover PATH
PATH_keep="${PATH}"
